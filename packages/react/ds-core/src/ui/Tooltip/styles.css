/* @canonical/generator-ds 0.9.0-experimental.4 */

/* component variables
    --tooltip-color-background: background color of the tooltip
    --tooltip-color-background-hover: background color of the tooltip on hover
    --tooltip-color-background-active: background color of the tooltip on active
    --tooltip-color-text: text color of the tooltip
    --tooltip-color-border: border color of the tooltip
    --tooltip-color-border-hover: border color of the tooltip on hover
    --tooltip-color-border-active: border color of the tooltip on active

    --tooltip-margin-left: left margin of the tooltip
    --tooltip-margin-bottom: bottom margin of the tooltip
    --tooltip-padding-vertical: vertical padding of the tooltip
    --tooltip-padding-horizontal: horizontal padding of the tooltip
    --tooltip-font-size: font size of the tooltip
    --tooltip-font-weight: font weight of the tooltip
    --tooltip-line-height: line height of the tooltip

    --tooltip-spacing-arrow-size: size of the arrow

    --tooltip-arrow-offset-left: offset of the arrow from the left
    --tooltip-arrow-offset-top: offset of the arrow from the top
*/

.ds.tooltip {
  --tooltip-spacing-arrow-middle: calc(50% - var(--tooltip-spacing-arrow-size));
  --tooltip-spacing-arrow-edge: calc(-2 * var(--tooltip-spacing-arrow-size));
  --tooltip-border-arrow-visible: var(--tooltip-spacing-arrow-size) solid
    var(--tooltip-color-background);
  --tooltip-border-arrow-hidden: var(--tooltip-spacing-arrow-size) solid
    transparent;

  color: var(
    --intent-color-text,
    var(--tooltip-color-text, var(--color-text-default))
  );
  background-color: var(
    --intent-color,
    var(--tooltip-color-background, var(--color-background-default))
  );
  border-color: var(
    --intent-color-border,
    var(--tooltip-color-border, transparent)
  );
  border-style: solid;
  border-radius: var(--tooltip-border-radius);
  border-width: var(--tooltip-border-width, 1px);
  font-size: var(--tooltip-font-size, var(--font-size-small));
  font-weight: var(--tooltip-font-weight, var(--font-weight-default));
  line-height: var(--tooltip-line-height, var(--line-height-small));
  margin-block-end: var(--tooltip-margin-bottom, 0);
  margin-inline-end: var(--tooltip-margin-left, 0);
  padding-block: var(--tooltip-padding-vertical, 5px);
  padding-inline: var(--tooltip-padding-horizontal, 10px);
  white-space: pre;
  text-align: left;
  text-decoration: initial;
  pointer-events: auto;
  display: inline-block;
  transition: opacity 0.1s ease-in-out;
  position: fixed;
  overflow: auto;

  &[aria-hidden="true"] {
    opacity: 0;
    pointer-events: none;
    visibility: hidden;
  }

  &[aria-hidden="false"] {
    opacity: 1;
    pointer-events: auto;
    visibility: visible;
  }

  &.autofit {
    &::before {
      transform: translateX(var(--tooltip-arrow-offset-left))
        translateY(var(--tooltip-arrow-offset-top));
    }
  }

  /* triangle */
  &::before {
    content: "";
    width: 0;
    height: 0;
    border: var(--tooltip-border-arrow-hidden);
    position: absolute;
  }

  &.top::before {
    border-top: var(--tooltip-border-arrow-visible);
    bottom: var(--tooltip-spacing-arrow-edge);
  }

  &.right::before {
    border-right: var(--tooltip-border-arrow-visible);
    left: var(--tooltip-spacing-arrow-edge);
  }

  &.bottom::before {
    border-bottom: var(--tooltip-border-arrow-visible);
    top: var(--tooltip-spacing-arrow-edge);
  }

  &.left::before {
    border-left: var(--tooltip-border-arrow-visible);
    right: var(--tooltip-spacing-arrow-edge);
  }

  &.top::before,
  &.bottom::before {
    left: var(--tooltip-spacing-arrow-middle);
  }

  &.left::before,
  &.right::before {
    top: var(--tooltip-spacing-arrow-middle);
  }
}
