name: Version packages
description: Updates package version numbers for changed packages.
inputs:
  prerelease_identifier:
    description: "Prerelease identifier"
    default: "experimental"
    required: false
outputs:
  VERSION:
    description: "The new latest version number across all packages"
    value: ${{ steps.lerna_version.outputs.VERSION }}
runs:
  using: composite
  steps:
    - name: Version packages
      shell: bash
      id: lerna_version
      run: |
        if [ -z "${{ inputs.prerelease_identifier }}" ]; then
          VERSION_ARGS="--conventional-graduate"
        else
          VERSION_ARGS="--preid ${{ inputs.prerelease_identifier}} --conventional-prerelease"
        fi

        # Run lerna version with the specified arguments
        # Do not commit or tag as we need to re-format the package files before committing
        bun run lerna version --conventional-commits $VERSION_ARGS --no-git-tag-version --no-push --yes

        # Lerna may introuce slight formatting changes to the package.json files. This also formats the generated CHANGELOG files.
        bun run check:fix

        # Extract the updated version from lerna.json
        VERSION=$(jq -r '.version' lerna.json)
        echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
